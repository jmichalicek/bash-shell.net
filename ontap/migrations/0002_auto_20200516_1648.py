# Generated by Django 3.0.5 on 2020-05-16 16:48

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('ontap', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OnTapPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='recipefermentable',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipefermentable',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='recipehop',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipehop',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='recipemiscingredient',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipemiscingredient',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='recipepage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipepage',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='recipeyeast',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipeyeast',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='BatchLogPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_on_tap', models.BooleanField(blank=True, default=False)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('brewing', 'Brewing'), ('fermenting', 'Fermenting'), ('complete', 'Complete')], default='planned', max_length=25)),
                ('brewed_date', models.DateField(blank=True, default=None, null=True)),
                ('packaged_date', models.DateField(blank=True, default=None, null=True)),
                ('on_tap_date', models.DateField(blank=True, default=None, null=True)),
                ('original_gravity', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=4, null=True)),
                ('final_gravity', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=4, null=True)),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ol', 'ul', 'bold', 'italic', 'code', 'superscript', 'subscript', 'strikethrough', 'blockquote', 'link', 'documentlink', 'image', 'embed'])), ('code', wagtail.core.blocks.StructBlock([('language', wagtail.core.blocks.ChoiceBlock(blank=True, choices=[('', 'Auto'), ('bash', 'Bash/Shell'), ('batch', 'Batch'), ('c', 'C'), ('cpp', 'C++'), ('csharp', 'C#'), ('css', 'CSS'), ('docker', 'Dockerfile'), ('elixir', 'Elixir'), ('go', 'Go'), ('htmldjango', 'Django Template'), ('html', 'HTML'), ('javascript', 'JavaScript'), ('json', 'JSON'), ('lisp', 'Lisp'), ('make', 'Makefile'), ('nginx', 'NGiNX Config'), ('perl', 'Perl'), ('php', 'PHP'), ('python', 'Python'), ('jsx', 'React JSX'), ('ruby', 'Ruby'), ('erb', 'Ruby Template/ERB'), ('sass', 'SASS'), ('scss', 'SCSS'), ('sql', 'SQL'), ('terraform', 'Terraform'), ('yaml', 'YAML')], required=False)), ('filename', wagtail.core.blocks.CharBlock(default='', required=False)), ('display_filename', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('code', wagtail.core.blocks.TextBlock(default='', required=False)), ('line_numbers', wagtail.core.blocks.ChoiceBlock(choices=[('', 'None'), ('table', 'Table'), ('inline', 'Inline')], required=False))])), ('quote', wagtail.core.blocks.BlockQuoteBlock()), ('other_page', wagtail.core.blocks.PageChooserBlock()), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(template='wagtail_blocks/image.html')), ('image_detail', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(label='Caption', max_length=200, required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('license_url', wagtail.core.blocks.URLBlock(required=False)), ('license_name', wagtail.core.blocks.CharBlock(required=False))])), ('image_gallery', wagtail.core.blocks.StructBlock([('image_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(label='Caption', max_length=200, required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('license_url', wagtail.core.blocks.URLBlock(required=False)), ('license_name', wagtail.core.blocks.CharBlock(required=False))]), label='Image'))])), ('embed', wagtail.embeds.blocks.EmbedBlock()), ('text', wagtail.core.blocks.TextBlock()), ('raw_html', wagtail.core.blocks.RawHTMLBlock())], blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipe', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ontap.RecipePage')),
                ('recipe_page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_log_pages', to='ontap.RecipePage')),
            ],
        ),
        migrations.AddIndex(
            model_name='batchlogpage',
            index=models.Index(fields=['is_on_tap'], name='ontap_batch_is_on_t_79ad3a_idx'),
        ),
        migrations.AddIndex(
            model_name='batchlogpage',
            index=models.Index(fields=['status'], name='ontap_batch_status_068fd0_idx'),
        ),
    ]
