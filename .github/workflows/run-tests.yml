name: Tests And Linting
on:
  push:
    branches:
    - main
    - production
  pull_request:
    branches:
    - main
env:
  DOCKER_IMAGE_REGISTRY: ${{ secrets.DOCKER_IMAGE_REGISTRY }}
  DOCKER_IMAGE_REGISTRY_USER: ${{ secrets.DOCKER_IMAGE_REGISTRY_USER }}
  DOCKER_IMAGE_REGISTRY_PASSWORD: ${{ secrets.DOCKER_IMAGE_REGISTRY_PASSWORD }}
  DOCKER_IMAGE_REPOSITORY: ${{ secrets.DOCKER_IMAGE_REPOSITORY}}
jobs:
  build_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Extract Branch Name
        uses: ./.github/actions/extract-branch-name
        id: extract_branch
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
          username: ${{ env.DOCKER_IMAGE_REGISTRY_USER }}
          password: ${{ env.DOCKER_IMAGE_REGISTRY_PASSWORD }}
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_REGISTRY}}/${{ env.DOCKER_IMAGE_REPOSITORY }}:${{ steps.extract_branch.outputs.branch }}_${GITHUB_SHA} .
          docker push ${{ env.DOCKER_IMAGE_REGISTRY}}/${{ env.DOCKER_IMAGE_REPOSITORY }}:${{ steps.extract_branch.outputs.branch }}_${GITHUB_SHA}
  back_end_tests:
    name: Back End Tests
    needs: build_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
        username: ${{ env.DOCKER_IMAGE_REGISTRY_USER }}
        password: ${{ env.DOCKER_IMAGE_REGISTRY_PASSWORD }}
    - uses: actions/checkout@v2
    - name: Setup Image
      uses: ./.github/actions/setup-docker-image
    - name: Tests
      shell: bash
      run: docker compose --profile=ci run --service-ports --rm django-ci python manage.py test --parallel
  flake8:
    name: Flake8
    needs: build_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
        username: ${{ env.DOCKER_IMAGE_REGISTRY_USER }}
        password: ${{ env.DOCKER_IMAGE_REGISTRY_PASSWORD }}
    - uses: actions/checkout@v2
    - name: Setup Image
      uses: ./.github/actions/setup-docker-image
    - name: Flake8
      run: docker compose --profile=ci run --service-ports --rm django-ci make flake8
  isort:
    name: isort
    needs: build_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
        username: ${{ env.DOCKER_IMAGE_REGISTRY_USER }}
        password: ${{ env.DOCKER_IMAGE_REGISTRY_PASSWORD }}
    - uses: actions/checkout@v2
    - name: Setup Image
      uses: ./.github/actions/setup-docker-image
    - name: isort
      run: docker compose --profile=ci run --service-ports --rm django-ci make isort-check
  djhtml:
    name: djhtml
    needs: build_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
        username: ${{ env.DOCKER_IMAGE_REGISTRY_USER }}
        password: ${{ env.DOCKER_IMAGE_REGISTRY_PASSWORD }}
    - uses: actions/checkout@v2
    - name: Setup Image
      uses: ./.github/actions/setup-docker-image
    - name: djhtml
      run: docker compose --profile=ci run --service-ports --rm django-ci make djhtml-check
  static_analysis:
    name: Static Analysis
    needs: build_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_IMAGE_REGISTRY }}
        username: ${{ env.DOCKER_IMAGE_REGISTRY_USER }}
        password: ${{ env.DOCKER_IMAGE_REGISTRY_PASSWORD }}
    - uses: actions/checkout@v2
    - name: Setup Image
      uses: ./.github/actions/setup-docker-image
    - name: mypy
      run: docker compose --profile=ci run --service-ports --rm django-ci make mypy